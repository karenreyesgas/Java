#created on: 19-Nov-2009
#author	: Mei Yii Lim

package FAtiMA.advancedMemoryComponent

#list any import classes here.
import FAtiMA.Core.memory.episodicMemory.ActionDetail;

#declare any global variables here

rule "same subject phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($s1 : subject != null) from $q.actionDetail
		$ad: ActionDetail(subject == $s1) 
	then		
		insert (new CandidateEvent($ad, "subject", 1.0f));
		retract ($ad);
		#System.out.println("same subject " + $ad.getID());
end

rule "different subject phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($s1 : subject) from $q.actionDetail
		$ad: ActionDetail((subject != $s1) || ((subject == $s1) && (subject == null))) 
	then		
		insert (new CandidateEvent($ad, "subject", 0.8f));
		retract ($ad);
		#System.out.println("different/empty subject " + $ad.getID());
end

rule "same target phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($t1 : target != null) from $q.actionDetail
		$ad: ActionDetail(target == $t1)
	then
		insert (new CandidateEvent($ad, "target", 1.0f));
		retract ($ad);
		#System.out.println("same target " + $ad.getID());
end

rule "different target phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($t1 : target) from $q.actionDetail
		$ad: ActionDetail((target != $t1) || ((target == $t1) && (target == null)))
	then
		insert (new CandidateEvent($ad, "target", 0.8f));
		retract ($ad);
		#System.out.println("different/empty target " + $ad.getID());
end

rule "same action phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($a1 : action != null) from $q.actionDetail
		$ad: ActionDetail(action == $a1) 
	then
		insert (new CandidateEvent($ad, "action", 1.0f));
		retract ($ad);
		#System.out.println("same action " + $ad.getID());
end

rule "different action phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($a1 : action) from $q.actionDetail
		$ad: ActionDetail((action != $a1) || ((action == $a1) && (action == null))) 
	then
		insert (new CandidateEvent($ad, "action", 0.8f));
		retract ($ad);
		#System.out.println("different/empty action " + $ad.getID());
end

rule "same location phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($l1 : location != null) from $q.actionDetail
		$ad: ActionDetail(location == $l1) 
	then
		insert (new CandidateEvent($ad, "location", 1.0f));
		retract ($ad);
		#System.out.println("same location " + $ad.getID());
end

rule "different location phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($l1 : location) from $q.actionDetail
		$ad: ActionDetail((location != $l1) || ((location == $l1) && (location == null))) 
	then
		insert (new CandidateEvent($ad, "location", 0.8f));
		retract ($ad);
		#System.out.println("different/empty location " + $ad.getID());
end

rule "same emotion phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($e1 : emotion != null) from $q.actionDetail
		$ad: ActionDetail(emotion == $e1) 
	then
		insert (new CandidateEvent($ad, "emotion", 1.0f));
		retract ($ad);
		#System.out.println("same emotion " + $ad.getID());
end

rule "different emotion phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($e1 : emotion) from $q.actionDetail
		$ad: ActionDetail((emotion != $e1) || ((emotion == $e1) && (emotion == null))) 
	then
		insert (new CandidateEvent($ad, "emotion", 0.8f));
		retract ($ad);
		#System.out.println("different/empty emotion " + $ad.getID());
end

rule "same intention phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($i1 : intention != null) from $q.actionDetail
		$ad: ActionDetail(intention == $i1) 
	then
		insert (new CandidateEvent($ad, "intention", 1.0f));
		retract ($ad);
		System.out.println("same intention " + $ad.getID());
end

rule "different intention phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($i1 : intention) from $q.actionDetail
		$ad: ActionDetail((intention != $i1) || ((intention == $i1) && (intention == null))) 
	then
		insert (new CandidateEvent($ad, "intention", 0.8f));
		retract ($ad);
		System.out.println("different/empty intention " + $ad.getID());
end

rule "same status phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($st1 : status != null) from $q.actionDetail
		$ad: ActionDetail(status == $st1) 
	then
		insert (new CandidateEvent($ad, "status", 1.0f));
		retract ($ad);
		#System.out.println("same status " + $ad.getID());
end

rule "different status phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($st1 : status) from $q.actionDetail
		$ad: ActionDetail((status != $st1) || ((status == $st1) && (status == null))) 
	then
		insert (new CandidateEvent($ad, "status", 0.8f));
		retract ($ad);
		#System.out.println("different/empty status " + $ad.getID());
end

rule "same speechActMeaning phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($sa1 : speechActMeaning != null) from $q.actionDetail
		$ad: ActionDetail(speechActMeaning == $sa1) 
	then
		insert (new CandidateEvent($ad, "speechActMeaning", 1.0f));
		retract ($ad);
		#System.out.println("same speechActMeaning " + $ad.getID());
end

rule "different speechActMeaning phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($sa1 : speechActMeaning) from $q.actionDetail
		$ad: ActionDetail((speechActMeaning != $sa1) || ((speechActMeaning == $sa1) && (speechActMeaning == null))) 
	then
		insert (new CandidateEvent($ad, "speechActMeaning", 0.8f));
		retract ($ad);
		#System.out.println("different/empty speechActMeaning " + $ad.getID());
end

rule "same multimediaPath phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($m1 : multimediaPath != null) from $q.actionDetail
		$ad: ActionDetail(multimediaPath == $m1) 
	then
		insert (new CandidateEvent($ad, "multimediaPath", 1.0f));
		retract ($ad);
		#System.out.println("same multimediaPath " + $ad.getID());
end

rule "different multimediaPath phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($m1 : multimediaPath) from $q.actionDetail
		$ad: ActionDetail((multimediaPath != $m1) || ((multimediaPath == $m1) && (multimediaPath == null))) 
	then
		insert (new CandidateEvent($ad, "multimediaPath", 0.8f));
		retract ($ad);
		#System.out.println("different/empty multimediaPath " + $ad.getID());
end

rule "same object phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($o1 : object != null) from $q.actionDetail
		$ad: ActionDetail(object == $o1) 
	then
		insert (new CandidateEvent($ad, "object", 1.0f));
		retract ($ad);
		#System.out.println("same object " + $ad.getID());
end

rule "different object phase1"
	no-loop true
	salience 50
	when
		$q: CCQuery()
		$qad: ActionDetail($o1 : object) from $q.actionDetail
		$ad: ActionDetail((object != $o1) || ((object == $o1) && (object == null))) 
	then
		insert (new CandidateEvent($ad, "object", 0.8f));
		retract ($ad);
		#System.out.println("different/empty object " + $ad.getID());
end

rule "same subject"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($s1 : subject != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "subject", phase != $q.numField)
		$ad: ActionDetail(subject == $s1) from $cad.actionDetail	
	then		
		modify ($cad)
		{
			increasePhase(), 
			setExtension("subject"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same subject " + $ad.getID());
end

rule "different subject"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($s1 : subject) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "subject", phase != $q.numField)
		$ad: ActionDetail((subject != $s1)  || ((subject == $s1) && (subject == null))) from $cad.actionDetail	
	then		
		modify ($cad)
		{
			increasePhase(), 
			setExtension("subject"),	
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty subject " + $ad.getID());
end

rule "same target"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($t1 : target != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "target", phase != $q.numField)
		$ad: ActionDetail(target == $t1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("target"),
			updateEvaluation(1.0f)			
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same target " + $ad.getID());
end

rule "different target"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($t1 : target) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "target", phase != $q.numField)
		$ad: ActionDetail((target != $t1)  || ((target == $t1) && (target == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("target"),
			updateEvaluation(0.8f)			
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty target " + $ad.getID());
end

rule "same action"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($a1 : action != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "action", phase != $q.numField)
		$ad: ActionDetail(action == $a1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("action"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same action " + $ad.getID());
end

rule "different action"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($a1 : action) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "action", phase != $q.numField)
		$ad: ActionDetail((action != $a1)  || ((action == $a1) && (action == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("action"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty action " + $ad.getID());
end

rule "same location"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($l1 : location != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "location", phase != $q.numField)
		$ad: ActionDetail(location == $l1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("location"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same location " + $ad.getID());
end

rule "different location"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($l1 : location) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "location", phase != $q.numField)
		$ad: ActionDetail((location != $l1)  || ((location == $l1) && (location == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("location"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty location " + $ad.getID());
end

rule "same emotion"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($e1 : emotion != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "emotion", phase != $q.numField)
		$ad: ActionDetail(emotion == $e1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("emotion"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same emotion " + $ad.getID());
end

rule "different emotion"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($e1 : emotion) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "emotion", phase != $q.numField)
		$ad: ActionDetail((emotion != $e1)  || ((emotion == $e1) && (emotion == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("emotion"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty emotion " + $ad.getID());
end

rule "same intention"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($i1 : intention != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "intention", phase != $q.numField)
		$ad: ActionDetail(intention == $i1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("intention"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same intention " + $ad.getID());
end

rule "different intention"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($i1 : intention) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "intention", phase != $q.numField)
		$ad: ActionDetail((intention != $i1) || ((intention == $i1) && (intention == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("intention"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty intention " + $ad.getID());
end

rule "same status"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($st1 : status != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "status", phase != $q.numField)
		$ad: ActionDetail(status == $st1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("status"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same status " + $ad.getID());
end

rule "different status"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($st1 : status) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "status", phase != $q.numField)
		$ad: ActionDetail((status != $st1)  || ((status == $st1) && (status == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("status"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty status " + $ad.getID());
end

rule "same speechActMeaning"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($sa1 : speechActMeaning != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "speechActMeaning", phase != $q.numField)
		$ad: ActionDetail(speechActMeaning == $sa1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("speechActMeaning"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same speechActMeaning " + $ad.getID());
end

rule "different speechActMeaning"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($sa1 : speechActMeaning) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "speechActMeaning", phase != $q.numField)
		$ad: ActionDetail((speechActMeaning != $sa1)  || ((speechActMeaning == $sa1) && (speechActMeaning == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("speechActMeaning"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty speechActMeaning " + $ad.getID());
end

rule "same multimediaPath"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($m1 : multimediaPath != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "multimediaPath", phase != $q.numField)
		$ad: ActionDetail(multimediaPath == $m1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("multimediaPath"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same multimediaPath " + $ad.getID());
end

rule "different multimediaPath"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($m1 : multimediaPath) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "multimediaPath", phase != $q.numField)
		$ad: ActionDetail((multimediaPath != $m1) || ((multimediaPath == $m1) && (multimediaPath == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("multimediaPath"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty multimediaPath " + $ad.getID());
end

rule "same object"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($o1 : object != null) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "object", phase != $q.numField)
		$ad: ActionDetail(object == $o1) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("object"),
			updateEvaluation(1.0f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("same object " + $ad.getID());
end

rule "different object"
	no-loop true
	when
		$q: CCQuery()
		$qad: ActionDetail($o1 : object) from $q.actionDetail
		$cad: CandidateEvent(extension not contains "object", phase != $q.numField)
		$ad: ActionDetail((object != $o1) || ((object == $o1) && (object == null))) from $cad.actionDetail	
	then
		modify ($cad)
		{
			increasePhase(), 
			setExtension("object"),
			updateEvaluation(0.8f)		
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("different/empty object " + $ad.getID());
end

rule "end match" 
	no-loop true
	when 
		$q: CCQuery()
		$cad: CandidateEvent(phase == $q.numField)
		$ad: ActionDetail() from $cad.actionDetail	
	then
		modify ($q)
		{
			setResults($ad, $cad.getEvaluation())
		}
		#System.out.println("Evaluation " + $cad.getEvaluation());
		#System.out.println("end match " + $ad.getID());
		retract ($cad);
end
